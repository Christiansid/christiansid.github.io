/*! For license information please see main.03417e2ab1cd8e579bce.bundle.js.LICENSE.txt */
(()=>{var e,t={432:(e,t,s)=>{"use strict";s(260);class i extends Phaser.GameObjects.Text{constructor(e){super(e,10,10,"",{color:"black",fontSize:"42px"}),e.add.existing(this),this.setOrigin(0),this.score=0}update(){this.setText(`Score: ${this.score}`)}increaseScore(){this.score+=1,this.update()}getScore(){return this.score}}class a extends Phaser.GameObjects.Image{constructor(e){super(e.scene,e.x,e.y,e.key),e.scene.physics.world.enableBody(this),e.scene.add.existing(this),this.body.setCollideWorldBounds(!0,0,0,!0)}create(e){}delete(){}}class r extends a{constructor(e,t,s){return super(e),this.setScale(e.scale),this.scene=e.scene,this.block_group=e.scene.add.group(),this.block_speed=t,this.scale=e.scale,this.create(s),this}create(e){let t=this.scale,s=32*t,i=e;this.body.setVelocityX(-this.block_speed),this.body.setAllowGravity(!1),this.x=this.scene.cameras.main.width-s/2;for(var a=1;a<i;a++){let e=p[Math.floor(Math.random()*p.length)];var r=this.scene.physics.add.image(this.scene.cameras.main.width-s/2,this.scene.ground.y-this.scene.ground.height/2-32*t/2-32*t*a,e).setScale(t);r.body.setAllowGravity(!1),this.block_group.add(r),r.body.setVelocityX(-this.block_speed)}this.block_group}destroy(){this.block_group.clear(),super.destroy()}updateSpeed(e){this.block_speed=e}collide(){}}function n(e,t,s=0){if(0==s)document.cookie=e+"="+t+";path=/";else{const i=new Date;i.setTime(i.getTime()+24*s*60*60*1e3);let a="expires="+i.toUTCString();document.cookie=e+"="+t+";"+a+";path=/"}}function o(e){let t=e+"=",s=decodeURIComponent(document.cookie).split(";");for(let e=0;e<s.length;e++){let i=s[e];for(;" "==i.charAt(0);)i=i.substring(1);if(0==i.indexOf(t))return i.substring(t.length,i.length)}return""}const h=parseInt(o("player_scale"));class c{static create(e,t,s){if("vacay_hat"===s)return e.add.sprite(t.x+5,t.y-t.height-9*h,s).setScale(parseInt(o("player_scale")));throw new Error("Error retrieving hat "+s+" Check availability")}static refresh(e,t){e.setPosition(t.x+5,t.y-t.height-10*h)}}c.key="vacayHat";class l extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.key),this.setScale(e.scale),e.scene.physics.world.enable(this),e.scene.add.existing(this),this.inAir=!1,this.jump_lock=!1,this.scene=e.scene,this.key=e.key,this.double_jump=!1,this.finger_down=!1,this.character_clothing={hat:""},this.body.setSize(22,47,!0),this.checkItemsOnCreation()}checkItemsOnCreation(){let e=o("hat");if(""!=e){let t=c.create(this.scene,this,e);this.equip(t,"hat")}}jump(e){this.refreshItems();let t=this;e.isDown&&(0==this.inAir&&0==this.jump_lock?(this.finger_down=!0,this.body.setVelocityY(-330),this.inAir=!0,this.play("jump",!0),this.double_jump=!0,t.scene.time.delayedCall(400,(function(){t.jump_lock=!0,t.double_jump=!0}))):0==this.jump_lock?this.body.setVelocityY(-320):1==this.double_jump&&0==this.finger_down&&(this.body.setVelocityY(-350),this.double_jump=!1,this.play("jump_transition",!0),this.scene.time.delayedCall(100,(()=>this.play("double_jump",!0))))),e.isDown||1!=this.inAir||(this.jump_lock=!0,this.finger_down=!1)}onGround(){this.play("walk",!0),this.inAir=!1,this.jump_lock=!1,this.double_jump=!1}equip(e,t){""==this.character_clothing[t]?this.character_clothing[t]=e:(this.remove_item(this.character_clothing[t],t),this.character_clothing[t]="",this.equip(e,t))}remove_item(e,t){this.character_clothing[t]="",e.destroy()}refreshItems(){let e=this.character_clothing.hat;""!=e&&c.refresh(e,this)}}class d{constructor(e){this.scene=e}playAgain(e,t,s){void 0===s&&(s=1);var i=this.scene.add.sprite(e,t,"play_again_default").setScale(s).setInteractive().on("pointerup",(()=>{i.setTexture("play_again_default"),this.scene.scene.restart()})).on("pointerdown",(()=>i.setTexture("play_again_clicked")))}play(e,t,s){void 0===s&&(s=1);var i=this.scene.add.sprite(e,t,"play_default").setScale(s).setInteractive().on("pointerup",(()=>{i.setTexture("play_default"),o("first_time"),this.firstPlay()})).on("pointerdown",(()=>i.setTexture("play_clicked")))}firstPlay(){let e=this.scene.add.text(0,0,"",{backgroundColor:"black",fixedWidth:window.innerWidth,fixedHeight:window.innerHeight}),t=this.scene.add.text(2,window.innerHeight/3,"Welcome to baggage run!\nThe goal of the game is to avoid bags by jumping over them        \n\n\nPress or hold to jump.\nThe longer you hold the higher you jump.        \n\nTo double jump press the screen again after letting go.",{color:"white",align:"center",fontSize:"22px",fontFamily:"roboto",wordWrap:{width:window.innerWidth,useAdvancedWrap:!0}});e.on("pointerup",(()=>{t.destroy(),e.destroy(),n("first_time","false"),this.scene.scene.start("MainScene")}),this),e.alpha=.7,e.setInteractive()}leaderboard(e,t,s){void 0===s&&(s=1);var i=this.scene.add.sprite(e,t,"leaderboard_default").setScale(s).setInteractive().on("pointerup",(()=>{i.setTexture("leaderboard_default")})).on("pointerdown",(()=>i.setTexture("leaderboard_clicked")))}quit(e,t,s){void 0===s&&(s=1);var i=this.scene.add.sprite(e,t,"quit_default").setScale(s).setInteractive().on("pointerup",(()=>{i.setTexture("quit_default"),this.scene.scene.start("StartScene")})).on("pointerdown",(()=>i.setTexture("quit_clicked")))}}const p=new Array("block_1","block_2","block_3","block_4");class m extends Phaser.Scene{constructor(){super({key:"MainScene"})}create(){this.start_sequence=!0,this.game_over=!1,this.spawn_time=4e3,this.block_speed=110,this.facing_correct=!1,this.obstacle_array=new Array,this.buttons=new d(this),this.add.tileSprite(this.cameras.main.width/2,this.cameras.main.height/2,this.cameras.main.width,this.cameras.main.height,"background_tile"),this.score_text=new i(this),this.score_text.update(),this.ground=this.physics.add.image(0,this.cameras.main.height-192,"ground"),this.ground.body.setAllowGravity(!1),this.ground.setImmovable(!0);const e={scene:this,x:.15*this.cameras.main.width,y:this.ground.y-this.ground.height/2-40,key:"player",scale:1.5};this.OBSTACLE_CONFIG={key:"block_1",x:this.cameras.main.width,y:this.ground.y-this.ground.height/2-16,scene:this,scale:1},this.physics.world.on("worldbounds",this.onWorldBounds,this),this.spawn_timer=this.time.addEvent(this.timer_config),this.player_character=new l(e),this.player_character.play("jump"),this.physics.add.collider(this.player_character,this.ground,this.onGround,void 0,this),this.last_spawn=this.time.now}update(){if(this.time.now-this.last_spawn>this.spawn_time&&0==this.game_over){let t=this.start_sequence?2:Phaser.Math.Between(2,3);this.last_spawn=this.time.now,this.OBSTACLE_CONFIG.key=p[Math.floor(Math.random()*p.length)];var e=new r(this.OBSTACLE_CONFIG,this.block_speed,t);this.physics.add.collider(this.player_character,e.block_group,this.gameOver,void 0,this),this.obstacle_array.push(e)}this.player_character.jump(this.input.activePointer)}onWorldBounds(){this.score_text.increaseScore();let e=this.score_text.getScore();e%10==0&&(this.block_speed+=20,this.spawn_time-=300),e>2&&(this.start_sequence=!1);let t=this.obstacle_array.shift();t.body.setCollideWorldBounds(!1).setVelocityX(-t.block_speed),this.time.delayedCall(300,(function(){t.destroy()}),[],this)}onGround(){this.player_character.onGround()}gameOver(){this.game_over=!0,this.player_character.setTint("0xFF0000"),this.physics.pause(),this.spawn_timer.remove(),this.player_character.play("jump",!0),this.buttons.playAgain(this.cameras.main.width/2,6*this.cameras.main.height/9),this.buttons.leaderboard(this.cameras.main.width/2,7*this.cameras.main.height/9),this.buttons.quit(this.cameras.main.width/2,8*this.cameras.main.height/9)}}class u extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.image("platform","assets/img/platform.png"),this.load.image("block_1","assets/img/block_1.png"),this.load.image("block_2","assets/img/block_2.png"),this.load.image("block_3","assets/img/block_3.png"),this.load.image("block_4","assets/img/block_4.png"),this.load.spritesheet("player","assets/img/stefan_sprite.png",{frameWidth:32,frameHeight:48}),this.load.spritesheet("conveyor","assets/img/conveyor_sprite.png",{frameWidth:1536,frameHeight:72}),this.load.image("brick_tile","assets/img/tile_foreground.png"),this.load.image("ground","assets/img/ground.png"),this.load.image("background_tile","assets/img/background_tile.png"),this.load.image("play_again_default","assets/img/playagain_default.png"),this.load.image("play_again_clicked","assets/img/playagain_clicked.png"),this.load.image("play_default","assets/img/play_default.png"),this.load.image("play_clicked","assets/img/play_clicked.png"),this.load.image("leaderboard_default","assets/img/leaderboard_default.png"),this.load.image("leaderboard_clicked","assets/img/leaderboard_clicked.png"),this.load.image("quit_default","assets/img/exit_default.png"),this.load.image("quit_clicked","assets/img/exit_clicked.png"),this.load.image("vacay_hat","assets/img/vacay_hat.png"),this.load.image("logo","assets/img/logo.png"),n("player_scale","4")}create(){this.anims.create({key:"roll",frameRate:5,frames:this.anims.generateFrameNumbers("conveyor",{start:1,end:4}),repeat:-1}),this.anims.create({key:"walk",frameRate:5,frames:this.anims.generateFrameNumbers("player",{start:5,end:8}),repeat:-1}),this.anims.create({key:"jump",frameRate:1,frames:[{key:"player",frame:5}]}),this.anims.create({key:"jump_transition",duration:500,frames:[{key:"player",frame:6}]}),this.anims.create({key:"double_jump",frameRate:1,frames:[{key:"player",frame:7}]}),this.scene.start("StartScene")}}class g extends Phaser.Scene{constructor(){super({key:"GameoverScene"})}create(){var e=this.add.sprite(this.cameras.main.width/2,this.cameras.main.height/3,"play_again_default").setInteractive().on("pointerup",(()=>{console.log("button works"),e.setTexture("play_again_default")})).on("pointerdown",(()=>e.setTexture("play_again_clicked")))}}class _ extends Phaser.Scene{constructor(){super({key:"StartScene"})}create(){this.add.tileSprite(.5*window.innerWidth,.5*window.innerHeight,this.cameras.main.width,this.cameras.main.height,"brick_tile"),n("hat",""),this.add.image(this.cameras.main.width/2,265,"logo"),this.physics.pause();var e=new d(this);e.play(this.cameras.main.width/2,6*this.cameras.main.height/10),e.leaderboard(this.cameras.main.width/2,7*this.cameras.main.height/10),e.quit(this.cameras.main.width/2,8*this.cameras.main.height/10)}}const y={type:Phaser.AUTO,backgroundColor:"#ffffff",scale:{parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:window.innerWidth,height:window.innerHeight,resolution:window.devicePixelRatio},scene:[u,m,g,_],physics:{default:"arcade",arcade:{debug:!1,gravity:{y:1100}}}};window.addEventListener("load",(()=>{new Phaser.Game(y)}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")}},s={};function i(e){var a=s[e];if(void 0!==a)return a.exports;var r=s[e]={exports:{}};return t[e].call(r.exports,r,r.exports,i),r.exports}i.m=t,e=[],i.O=(t,s,a,r)=>{if(!s){var n=1/0;for(l=0;l<e.length;l++){for(var[s,a,r]=e[l],o=!0,h=0;h<s.length;h++)(!1&r||n>=r)&&Object.keys(i.O).every((e=>i.O[e](s[h])))?s.splice(h--,1):(o=!1,r<n&&(n=r));if(o){e.splice(l--,1);var c=a();void 0!==c&&(t=c)}}return t}r=r||0;for(var l=e.length;l>0&&e[l-1][2]>r;l--)e[l]=e[l-1];e[l]=[s,a,r]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var a,r,[n,o,h]=s,c=0;if(n.some((t=>0!==e[t]))){for(a in o)i.o(o,a)&&(i.m[a]=o[a]);if(h)var l=h(i)}for(t&&t(s);c<n.length;c++)r=n[c],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(l)},s=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),i.O(void 0,[216],(()=>i(432)));var a=i.O(void 0,[216],(()=>i(204)));a=i.O(a)})();